<?php

/**
 * @file
 * Component Module.
 */

/**
 * Implements hook_library_info_build().
 */
function component_library_info_build() {
  $libraries = [];

  $discovery  = \Drupal::service('component.component_discovery');
  $components = $discovery->getComponents();

  foreach ($components as $component) {
    $info = $component->info;
    $path = $component->subpath;

    $library_header = [];
    $library_footer = [];

    if (isset($info['add_css'])) {
      // Build the css assets, grouping them by header and footer.
      $css_assets = _component_library_build_css($info, $path);
      if (!empty($css_assets)) {
        if (!empty($css_assets['header'])) {
          $library_header += $css_assets['header'];
        }

        if (!empty($css_assets['footer'])) {
          $library_footer += $css_assets['footer'];
        }
      }
    }

    if (isset($info['add_js'])) {
      // Build the js assets, grouping them by header and footer.
      $js_assets = _component_library_build_js($info, $path);
      if (!empty($js_assets)) {
        if (!empty($js_assets['header'])) {
          $library_header += $js_assets['header'];
        }

        if (!empty($js_assets['footer'])) {
          $library_footer += $js_assets['footer'];
        }
      }
    }

    // Build a library to include assets in header.
    if (!empty($library_header)) {
      $library_header['header'] = TRUE;
      // Add dependency on presentation library.
      $pres = $info['presentation'];
      $library_header['dependencies'] = array('component_' . $pres . '/' . $pres);
      $libraries += [$info['machine_name'] . '/header' => $library_header];
    }

    // Build a library to include assets in footer.
    if (!empty($library_footer)) {
      // Add dependency on presentation library.
      $pres = $info['presentation'];
      $library_footer['dependencies'] = array('component_' . $pres . '/' . $pres);
      $libraries += [$info['machine_name'] . '/footer' => $library_footer];
    }
  }

  return $libraries;
}

/**
 * Helper function to process and build library css assets.
 */
function _component_library_build_css($info, $path) {
  $css_assets = [];

  if (isset($info['add_css']['header'])) {
    foreach ($info['add_css']['header'] as $group => $css) {
      $header_css = _component_library_build_get_assets($css, $path, $group);
      $css_assets['header'] = ['css' => $header_css];
    }
  }

  if (isset($info['add_css']['footer'])) {
    foreach ($info['add_css']['footer'] as $group => $css) {
      $footer_css = _component_library_build_get_assets($css, $path, $group);
      $css_assets['footer'] = ['css' => $footer_css];
    }
  }

  return $css_assets;
}

/**
 * Helper function to process and build library js assets.
 */
function _component_library_build_js($info, $path) {
  $js_assets = [];

  if (isset($info['add_js']['header'])) {
    $header_js = _component_library_build_get_assets($info['add_js']['header'], $path);
    $js_assets['header'] = ['js' => $header_js];
  }

  if (!empty($info['add_js']['footer'])) {
    $footer_js = _component_library_build_get_assets($info['add_js']['footer'], $path);
    $js_assets['footer'] = ['js' => $footer_js];
  }
  return $js_assets;
}

/**
 * Helper function to process and build library assets.
 */
function _component_library_build_get_assets($assets, $path, $group = FALSE) {
  $processed = [];
  foreach ($assets as $asset_file => $asset_data) {
    // Allow external assets to use absolute path.
    if (!empty($asset_data['type']) && $asset_data['type'] == 'external') {
      $asset_path = $asset_file;
    }
    else {
      $asset_path = '/' . $path . '/' . $asset_file;
    }

    $processed[$asset_path] = $asset_data;
  }

  // Add a group parent if there is one.
  if ($group) {
    $processed = [$group => $processed];
  }
  return $processed;
}
