<?php

/**
 * @file
 * Component Module.
 */

/**
 * Implements hook_theme() for Component templates.
 */
function component_theme() {
  return [
    'component_html' => [
      'variables' => [
        'html_template' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_library_info_build().
 *
 * Create a Drupal library entry for each component. This is what the
 *   component uses to load the css/js.
 *   Eg: 'component/example_tabs'
 */
function component_library_info_build() {
  $libraries = [];

  // Get a list of all components.
  $discovery = \Drupal::service('component.component_discovery');
  $components = $discovery->getComponents();

  // Build the library registry for each component.
  foreach ($components as $component) {
    $info = $component->info;
    $path = $component->subpath;
    // Build the library array from the config.
    $lib = [];
    if (isset($info['js'])) {
      $lib['js'] = _component_build_library($info['js'], $path);
    }
    if (isset($info['css'])) {
      $lib['css']['component'] = _component_build_library($info['css'], $path);
    }
    if (isset($info['dependencies'])) {
      $lib['dependencies'] = $info['dependencies'];
    }
    // Add the library to the registry.
    $libraries[$info['machine_name']] = $lib;
  }

  return $libraries;
}

/**
 * Helper function to process and build library assets.
 */
function _component_build_library($assets, $path) {
  $processed = [];
  foreach ($assets as $asset_file => $asset_data) {
    // Allow external assets to use absolute path.
    if (!empty($asset_data['type']) && $asset_data['type'] == 'external') {
      $asset_path = $asset_file;
    }
    else {
      $asset_path = '/' . $path . '/' . $asset_file;
    }
    $processed[$asset_path] = $asset_data;
  }

  return $processed;
}
