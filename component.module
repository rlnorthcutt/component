<?php

/**
 * @file
 * Component Module.
 */

/**
 * Implements hook_theme() for Component templates.
 */
function component_theme() {
  return [
    'component_html' => [
      'render element' => 'elements',
      'variables' => [
        'html_template' => NULL,
        'content_attributes' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_library_info_build().
 *
 * Create a Drupal library entry for each component. This is what the
 *   component uses to load the css/js.
 *   Eg: 'component/example_tabs'
 */
function component_library_info_build() {
  $libraries = [];

  // Get a list of all components.
  $discovery = \Drupal::service('component.discovery');
  $component_list = $discovery->getComponents();

  // Build the library registry for each component. We have to loop
  // twice because they are keyed to the type of component (block, library)
  // as well as the component machine/name.
  foreach ($component_list as $components) {
    foreach ($components as $name => $component) {
      // Build the library array from the config.
      if ($component['js']) {
        $libraries[$name]['js'] = _component_build_library($component['js'], $component['subpath']);
      }
      if ($component['css']) {
        $libraries[$name]['css']['component'] = _component_build_library($component['css'], $component['subpath']);
      }
      if ($component['dependencies']) {
        $libraries[$name]['dependencies'] = $component['dependencies'];
      }
    }
  }

  return $libraries;
}

/**
 * Helper function to process and build library assets.
 *
 * @param array $assets
 *   The asset array for CSS or JS.
 * @param string $subpath
 *   The path to the component parent folder, relative to root. This is
 *   epected to have a forward slash at the beginning and end already.
 */
function _component_build_library(array $assets, $subpath) {
  $processed = [];
  foreach ($assets as $asset_file => $asset_data) {
    // Allow external assets to use absolute path.
    if (!empty($asset_data['type']) && $asset_data['type'] == 'external') {
      $asset_path = $asset_file;
    }
    else {
      $asset_path = $subpath . $asset_file;
    }
    $processed[$asset_path] = $asset_data;
  }

  return $processed;
}
